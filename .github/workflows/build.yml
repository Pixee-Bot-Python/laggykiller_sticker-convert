name: Build

on:
  push:
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:

  createrelease:
    name: Create Release
    runs-on: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Create Release
      uses: ncipollo/release-action@v1
      with:
        token: "${{ secrets.GITHUB_TOKEN }}"
        name: Release ${{ github.ref_name }}

  build:
    name: Build packages
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-2019
            TARGET: windows
            CMD_BUILD: |
                python -m pip install --upgrade pip
                pip install wheel
                pip install -r requirements-build.txt
                python3 get_deps.py
                $env:Path += ";C:\Program Files\UniConvertor-2.0rc5\dlls"
                pyinstaller sticker_convert.spec
                cd dist
                ../sticker_convert/bin/zip.exe -r9 sticker-convert-windows.zip sticker-convert
            OUT_FILE_NAME: sticker-convert-windows.zip
            ASSET_MIME: application/zip
          - os: macos-11
            TARGET: macos
            CMD_BUILD: |
                python -m pip install --upgrade pip
                pip install wheel
                pip install -r requirements-build.txt
                python3 get_deps.py
                pyinstaller sticker_convert.spec
                mv run_me_first.command ./dist
                cd dist/
                zip -r9 sticker-convert-macos.zip sticker-convert.app run_me_first.command
            OUT_FILE_NAME: sticker-convert-macos.zip
            ASSET_MIME: application/zip
          - os: ubuntu-20.04
            TARGET: linux
            CMD_BUILD: |
                sudo apt install -y libpng-dev libxft-dev libfontconfig1-dev libfreetype6-dev
                wget -O appimage-builder https://github.com/AppImageCrafters/appimage-builder/releases/download/v1.1.0/appimage-builder-1.1.0-x86_64.AppImage
                wget -O appimagetool https://github.com/AppImage/AppImageKit/releases/download/13/appimagetool-x86_64.AppImage
                chmod +x ./appimage-builder
                chmod +x ./appimagetool
                # Creating appimage directly with appimage-builder result in xz compression
                # That would be not possible to be verified by https://appimage.github.io/apps/
                # Due to https://github.com/AppImage/appimage.github.io/blob/master/code/worker.sh
                # runtime-fuse2-x86_64 unable to handle xz compression
                ./appimage-builder --skip-appimage
                # Add .desktop comment
                sed -i 's/Comment=/Comment=Convert (animated) stickers between WhatsApp, Telegram, Signal, Line, Kakao, iMessage/g' ./AppDir/*.desktop
                # Add appdata.xml
                mkdir -p AppDir/usr/share/metainfo
                cp ./sticker-convert.appdata.xml AppDir/usr/share/metainfo
                # Bundling into appimage
                ARCH=x86_64 ./appimagetool ./AppDir
                chmod +x sticker-convert-x86_64.AppImage
                mkdir dist
                mv ./sticker-convert-x86_64.AppImage ./dist/sticker-convert-x86_64.AppImage
            OUT_FILE_NAME: sticker-convert-x86_64.AppImage
            ASSET_MIME: application/zip
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Set up Python 3.11
      uses: actions/setup-python@v2
      with:
        python-version: 3.11
    - name: Build for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}
    - name: Get release
      id: get_release
      uses: bruceadams/get-release@v1.3.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release.outputs.upload_url }}
        asset_path: ./dist/${{ matrix.OUT_FILE_NAME}}
        asset_name: ${{ matrix.OUT_FILE_NAME}}
        asset_content_type: ${{ matrix.ASSET_MIME}}
